<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:DeepConfigEditor.Components"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com"
                    xmlns:cal="http://www.caliburnproject.org">

    <!--Overrides-->
    <System:Double x:Key="TabItemFontSize">18</System:Double>
    <SolidColorBrush x:Key="BlackBrush" Color="#353535"/>
    
    <!--Colors-->
    <SolidColorBrush x:Key="NormalTextBrush" Color="#353535"/>
    <SolidColorBrush x:Key="DisabledTextBrush" Color="#858585"/>
    <SolidColorBrush x:Key="WhiteTextBrush" Color="#FFf0f0f1" />
    <SolidColorBrush x:Key="MediumTextBrush" Color="#FF666666" />
    
    <!--Text-->
    <Style x:Key="MediumText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    
    <!--Buttons-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Padding" Value="10,6" />
    </Style>

    <Style x:Key="LinkButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FF1111DD" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource NormalTextBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                 <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          RecognizesAccessKey="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DiscreteButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Opacity="0.2" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="contentPresenter" Property="Opacity" Value=".2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DiscreteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource DiscreteButtonTemplate}" />
    </Style>

    <DrawingImage x:Key='nullImage' />

    <!--Mru List-->
    <Style TargetType="{x:Type local:SimpleButtonList}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SimpleButtonList}">
                    <Grid>
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <TextBlock Name="EmptyMessage" Text="{TemplateBinding local:Attached.EmptyMessage}" FontStyle="Italic" Foreground="{StaticResource MediumTextBrush}" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Gray9}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EmptyMessage" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MruListItem">
        <Grid Margin="5,0" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:SimpleButtonList}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Image Source="{Binding IconUri}" Width="16" Height="16" />
            <TextBlock Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis" Margin="6,0,0,0" Grid.Column="1" VerticalAlignment="Center" />
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{lex:Loc DeepConfigEditor.Resources:ConfigSourceSelectRes:RemoveRecentSource}" cal:Message.Attach="RemoveRecentSource($datacontext)" cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
    </DataTemplate>

    <Style x:Key="MruListItemStyle" TargetType="{x:Type Button}" >
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
        <Setter Property="BorderBrush" Value="#FFF1F1F1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="cal:Message.Attach" Value="SelectSource($datacontext)" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                            <Setter Property="Foreground" Value="{StaticResource NormalTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>